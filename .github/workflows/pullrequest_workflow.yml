name: PySNDAQ Test Suite (Pull Request)

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  pull_request:
    branches: [ $default-branch ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      # Add a list of python versions we want to use for testing.
      matrix:
        python-version: [3.6, 3.7, 3.8]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Set up the Python environment and dependencies
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Install PySNDAQ
        run: |
          python setup.py install --user

      # Run the unit tests and generate coverage report
      # Writes coverage to coverage.term, then stores in git env var, for more detail see
      # https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions
      - name: Run unit tests and generate coverage report
        run: |
          pytest --cov-report term-missing --cov=sndaq python/sndaq/tests/ &> python/sndaq/tests/coverage/coverage.term
          echo "coverage_report << EOF" >> $GITHUB_ENV
          cat python/sndaq/tests/coverage/coverage.term >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - name: Report coverage on PR
        uses: actions/github-script@v3
          with:
            github-token: ${{secrets.GITHUB_TOKEN}}
            script: |
              github.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: '${{ env.coverage_report }}'
              })

#      - name: Publish coverage report
#        uses: codecov/codecov-action@v1
#        with:
#          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
#          files: python/sndaq/tests/coverage.xml # optional
#          name: PySNDAQ # optional
#          fail_ci_if_error: true # optional (default = false)
#          verbose: true # optional (default = false)
